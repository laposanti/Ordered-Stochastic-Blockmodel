df_median_rank1 =df_median_rank%>%
left_join(median_rank, by =c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(df_median_rank1$median_rank.y)],ordered = T))
df_median_rank1 %>%
ggplot(aes( y = pl_1, x = median_rank.x)) +
geom_density_ridges2(fill = "#00AFBB")
df_median_rank1 <- df_median_rank %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = factor(pl_1, levels = pl_1[order(median_rank.y)], ordered = TRUE))
df_median_rank1 <- df_median_rank %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = factor(pl_1[order(median_rank.y)], ordered = TRUE))
df_median_rank1 %>%
ggplot(aes( y = pl_1, x = median_rank.x)) +
geom_density_ridges2(fill = "#00AFBB")
df_median_rank1 <- df_median_rank %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = as.factor(pl_1[order(median_rank.y)], ordered = TRUE))
df_median_rank1 <- df_median_rank %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = as.factor(pl_1[order(median_rank.y)]))
df_median_rank1 %>%
ggplot(aes( y = pl_1, x = median_rank.x)) +
geom_density_ridges2(fill = "#00AFBB")
median_rank
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(color='green4')
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(fill='green4')+
```
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(fill='green4')+
labs(x = 'players',y='median rank', title = 'Ranks of players in the dataset')
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(fill='green4')+
labs(x = 'players',y='median rank', title = 'Ranks of players in the dataset')+
theme(axis.text.x = element_text(angle=90))
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(fill='green4')+
labs(x = 'players',y='median rank', title = 'Ranks of players in the dataset')+
theme(axis.text.x = element_text(angle=90))+
theme_minimal()
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(fill='green4')+
labs(x = 'players',y='median rank', title = 'Ranks of players in the dataset')+
theme_minimal()+
theme(axis.text.x = element_text(angle=90))
ggplot(median_rank, aes(x = reorder(players,median_rank), y=median_rank))+
geom_col(fill='green4')+
labs(x = 'Players',y='Median rank', title = 'Ranks of players in the dataset')+
theme_minimal()+
theme(axis.text.x = element_text(angle=90))
df_median_rank = expand_grid(pl_1 = median_rank$players, pl_2 = median_rank$players)%>%
left_join(median_rank, by = c('pl_2' = 'players'))
for(i in 1:nrow(df_median_rank)){
df_median_rank$Num_games[i] = N_ij[df_median_rank$pl_1[i],df_median_rank$pl_2[i]]
}
df_median_rank_sum = df_median_rank %>%
group_by(pl_1, median_rank)%>%
summarise(num_games_per_rank = sum(Num_games))
df_last_rank_sum = df_median_rank %>%
group_by(pl_1, last_rank)%>%
summarise(num_games_per_rank = sum(Num_games))
df_median_rank_total = df_median_rank %>%
group_by(pl_1)%>%
summarise(mean_median_rank = sum(median_rank*Num_games)/sum(Num_games),
sd_median_rank = sd(rep(median_rank,Num_games)),
mean_last_rank = sum(last_rank*Num_games/sum(Num_games)),
sd_last_rank =sd(rep(last_rank,Num_games)))
library(ggridges)
df_median_rank_total %>%
ggplot(aes( y = reorder(pl_1,median_rank$median_rank,decreasing=T)))+
geom_errorbarh(aes(xmin = mean_median_rank-1.96*sd_median_rank, xmax = mean_median_rank+1.96*sd_median_rank))+
geom_point(aes(x = mean_median_rank))+
labs(y = "Players", x = 'Mean rank of the opponent')+
theme_minimal()
df_median_rank
df_rank_1 = data.frame(pl_1 = character(), rank_games_against = numeric())
df_median_rank$Num_games
df_median_rank$Num_games[i]
rep(df_median_rank$median_rank,df_median_rank$Num_games[i])
df_rank_1 = data.frame(pl_1 = character(), rank_games_against = numeric())
for(i in 1:nrow(df_median_rank)){
num_games = df_median_rank$Num_games[i]
if(num_games>0){
rank_i = rep(df_median_rank$median_rank[i],df_median_rank$Num_games[i])
df_rank_1 = append(df_rank_1, data.frame(pl_1= rep(df_median_rank$pl_1[i],num_games),
rank_games_against = rep(rank_i,num_games)))
}
}
df_rank_1
df_rank_1 = append(df_rank_1, data.frame(pl_1= rep(df_median_rank$pl_1[i],num_games),
rank_games_against = rep(rank_i,num_games)))
df_rank_1 = data.frame(pl_1 = character(), rank_games_against = numeric())
for(i in 1:nrow(df_median_rank)){
num_games = df_median_rank$Num_games[i]
if(num_games>0){
rank_i = rep(df_median_rank$median_rank[i],df_median_rank$Num_games[i])
df_rank_1 = append(df_rank_1, data.frame(pl_1= rep(df_median_rank$pl_1[i],num_games),
rank_games_against = rep(rank_i,num_games)))
}
}
df_rank_1
ncol(df_rank_1)
rep(df_median_rank$pl_1[i],num_games),
rep(df_median_rank$pl_1[i],num_games)
df_rank_1 = data.frame(pl_1 = character(), rank_games_against = numeric())
for(i in 1:nrow(df_median_rank)){
num_games = df_median_rank$Num_games[i]
if(num_games>0){
rank_i = rep(df_median_rank$median_rank[i],df_median_rank$Num_games[i])
df_rank_1 = rbind(df_rank_1, data.frame(pl_1= rep(df_median_rank$pl_1[i],num_games),
rank_games_against = rep(rank_i,num_games)))
}
}
df_rank_1
ggplot(df_rank_1, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges(fill = "#00AFBB")
df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='player'))
df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))
df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)]))
df_rank_1 = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)]))
ggplot(df_rank_1, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges(fill = "#00AFBB")
df_rank_1 = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
ggplot(df_rank_1, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges(fill = "#00AFBB")
df_rank_1 = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
df_rank_1 = data.frame(pl_1 = character(), rank_games_against = numeric())
for(i in 1:nrow(df_median_rank)){
num_games = df_median_rank$Num_games[i]
if(num_games>0){
rank_i = rep(df_median_rank$median_rank[i],df_median_rank$Num_games[i])
df_rank_1 = rbind(df_rank_1, data.frame(pl_1= rep(df_median_rank$pl_1[i],num_games),
rank_games_against = rep(rank_i,num_games)))
}
}
df_rank_1 = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
ggplot(df_rank_1, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges(fill = "#00AFBB")
pl_1[order(median_rank)]
df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
df_rank_1 = data.frame(pl_1 = character(), rank_games_against = numeric())
for(i in 1:nrow(df_median_rank)){
num_games = df_median_rank$Num_games[i]
if(num_games>0){
rank_i = rep(df_median_rank$median_rank[i],df_median_rank$Num_games[i])
df_rank_1 = rbind(df_rank_1, data.frame(pl_1= rep(df_median_rank$pl_1[i],num_games),
rank_games_against = rep(rank_i,num_games)))
}
}
df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
df_rank_plot = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
ggplot(df_rank_plot, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges(fill = "#00AFBB")
ggplot(df_rank_plot, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges()
ggplot(df_rank_plot, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges()+
xlim(0,100)
ggplot(df_rank_plot, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges1()+
xlim(0,100)
ggplot(df_rank_plot, aes(x = rank_games_against, y = pl_1, group = pl_1)) +
geom_density_ridges_gradient()+
xlim(0,100)
ggplot(df_rank_plot, aes(x = rank_games_against, y = pl_1)) +
geom_density_ridges_gradient()+
xlim(0,100)
ggplot(df_rank_plot, aes(x = rank_games_against, y = factor(pl_1[order(median_rank)])) +
ggplot(df_rank_plot, aes(x = rank_games_against, y = factor(pl_1[order(median_rank)]))) +
geom_density_ridges_gradient()+
xlim(0,100)
}}
ggplot(df_rank_plot, aes(x = rank_games_against, y = factor(pl_1[order(median_rank)]))) +
geom_density_ridges_gradient()+
xlim(0,100)
df_rank_plot = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))
ggplot(df_rank_plot, aes(x = rank_games_against, y = factor(pl_1[order(median_rank)]))) +
geom_density_ridges_gradient()+
xlim(0,100)
df_rank_plot = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
df_rank_plot%>%
ggplot(aes(x =pl_1,y=rank_games_against))+
geom_point
df_rank_plot%>%
ggplot(aes(x =pl_1,y=rank_games_against))+
geom_point()
df_rank_plot = df_rank_1 %>%
left_join(median_rank, by = c('pl_1'='players'))%>%
mutate(pl_1 = factor(pl_1[order(median_rank)],ordered = T))
df_rank_plot
df_rank_plot%>%
ggplot(aes(x =pl_1,y=rank_games_against))+
geom_point()+
```
df_rank_plot%>%
ggplot(aes(x =pl_1,y=rank_games_against))+
geom_point()+
theme(axis.text.x = element_text(angle=90))
df_rank_plot <- df_rank_1 %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = factor(pl_1, levels = pl_1[order(median_rank)], ordered = TRUE))
df_rank_plot <- df_rank_1 %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = factor(pl_1, levels = unique(pl_1[order(median_rank)]), ordered = TRUE))
df_rank_plot%>%
ggplot(aes(x =pl_1,y=rank_games_against))+
geom_point()+
theme(axis.text.x = element_text(angle=90))
df_rank_plot <- df_rank_1 %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = factor(pl_1, levels = unique(pl_1[order(median_rank)]), ordered = TRUE))
ggplot(
df_rank_plot,
aes(x = median_rank, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE')
df_rank_plot <- df_rank_1 %>%
left_join(median_rank, by = c('pl_1' = 'players')) %>%
mutate(pl_1 = factor(pl_1, levels = unique(pl_1[order(-median_rank)]), ordered = TRUE))
ggplot(
df_rank_plot,
aes(x = median_rank, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE')
ggplot(
df_rank_plot,
aes(x = median_rank, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.1) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = median_rank, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.1) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = median_rank, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
labs(title = 'Density of Number of Games by Rank')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,100)+
labs(title = 'Density of Number of Games by Rank')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 3, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, size = 0.3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, size = 0.3, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank')
df_rank_plot%>%
filter(median_rank<20)%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank')
df_rank_plot <- df_rank_plot %>%
mutate(rank_group = case_when(
median_rank <= 20 ~ "0-20",
median_rank <= 40 ~ "21-40",
median_rank <= 80 ~ "41-80",
median_rank > 80 ~ ">80"
))
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
x = 'Rank of the opponent',
y = 'Density of the number of games') +
facet_wrap(~rank_group)
ggplot(df_rank_plot
aes(x = rank_games_against, y = pl_1, fill = stat(x))
ggplot(df_rank_plot,
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
x = 'Rank of the opponent',
y = 'Density of the number of games') +
facet_wrap(~rank_group)
df_rank_plot <- df_rank_plot %>%
mutate(rank_group = case_when(
median_rank <= 20 ~ "0-20",
median_rank <= 40 ~ "21-40",
median_rank <= 80 ~ "41-80",
median_rank > 80 ~ ">80"
))
ggplot(df_rank_plot,
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
x = 'Rank of the opponent',
y = 'Density of the number of games')
df_rank_plot
df_rank_plot%>%
filter(rank_group == "0-20")%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
x = 'Rank of the opponent',
y = 'Density of the number of games')
df_rank_plot%>%
filter(rank_group == "0-20")%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
subtitle = 'Players with a median rank in [1-20]'
x = 'Rank of the opponent',
df_rank_plot%>%
filter(rank_group == "0-20")%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
subtitle = 'Players with a median rank in [1-20]',
x = 'Rank of the opponent',
y = 'Density of the number of games')
df_rank_plot%>%
filter(rank_group == ">80")%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
subtitle = 'Players with a median rank in [80-200]',
x = 'Rank of the opponent',
y = 'Density of the number of games')
df_median_rank_total = df_median_rank %>%
group_by(pl_1)%>%
summarise(mean_median_rank = sum(median_rank*Num_games)/sum(Num_games),
sd_median_rank = sd(rep(median_rank,Num_games)),
mean_last_rank = sum(last_rank*Num_games/sum(Num_games)),
sd_last_rank =sd(rep(last_rank,Num_games)))
library(ggridges)
df_median_rank_total %>%
ggplot(aes( y = reorder(pl_1,median_rank$median_rank,decreasing=T)))+
geom_errorbarh(aes(xmin = mean_median_rank-1.96*sd_median_rank, xmax = mean_median_rank+1.96*sd_median_rank))+
geom_point(aes(x = mean_median_rank))+
labs(y = "Players", x = 'Mean rank of the opponent')+
theme_minimal()
df_median_rank_total %>%
ggplot(aes( y = reorder(pl_1,median_rank$median_rank,decreasing=T)))+
geom_errorbarh(aes(xmin = mean_median_rank-1.96*sd_median_rank, xmax = mean_median_rank+1.96*sd_median_rank))+
geom_point(aes(x = mean_median_rank))+
labs(y = "Players", x = 'Mean rank of the opponent')+
theme_minimal()+
xlim(0,200)
df_median_rank_total %>%
ggplot(aes( y = reorder(pl_1,median_rank$median_rank,decreasing=T)))+
geom_errorbarh(aes(xmin = mean_median_rank-1.96*sd_median_rank, xmax = mean_median_rank+1.96*sd_median_rank))+
geom_point(aes(x = mean_median_rank))+
labs(y = "Players", x = 'Mean rank of the opponent')+
theme_minimal()
df_rank_plot%>%
filter(rank_group == ">80")%>%
ggplot(
aes(x = rank_games_against, y = pl_1, fill = stat(x))
) +
geom_density_ridges_gradient(scale = 2, rel_min_height = 0.01,alpha=0.5) +
scale_fill_viridis_c(name = "Rank of opponent", option = "C") +
xlim(0,150)+
labs(title = 'Density of Number of Games by Rank',
subtitle = 'Players with a median rank in [80-200]',
x = 'Rank of the opponent',
y = 'Density of the number of games')+
theme_minimal()
tapply(df_rank_plot, rank_group, summary)
df_rank_plot <- df_rank_plot %>%
mutate(rank_group = case_when(
median_rank <= 20 ~ "0-20",
median_rank <= 40 ~ "21-40",
median_rank <= 80 ~ "41-80",
median_rank > 80 ~ ">80"
))
tapply(df_rank_plot, df_rank_plot$rank_group, summary)
t_applydf = tapply(df_rank_plot, df_rank_plot$rank_group, summary)
t_applydf$`0-20`[3]
t_applydf$`0-20`
t_applydf$`0-20`[,2]
t_applydf = tapply(df_rank_plot[,c("median_rank","rank_group")], df_rank_plot$rank_group, summary)
t_applydf
t_applydf = tapply(df_rank_plot[,c("rank_games_against","rank_group")], df_rank_plot$rank_group, summary)
t_applydf
t_applydf = tapply(df_rank_plot[,c("rank_games_against","rank_group")], df_rank_plot$rank_group, summary)[]
t_applydf = tapply(df_rank_plot[,c("rank_games_against","rank_group")], df_rank_plot$rank_group, summary)[1]
t_applydf = tapply(df_rank_plot[,c("rank_games_against","rank_group")], df_rank_plot$rank_group, summary)
t_applydf$`0-20`[,1]
knitr::kable(t_applydf)
pander(t_applydf)
pander::pander(t_applydf)
(t_applydf)
source("~/.active-rstudio-document", echo=TRUE)
matching_files
df_model_choice%>%
filter(est_model =='SST')%>%
ggplot(aes(K_est,looic,color = est_model,shape = est_model))+
geom_point()+
labs(title = "Looic for different models",
subtitle = 'Lower values are better',
caption = paste0("True data ~ ",df_model_choice$true_model[1], " model ,K = ",df_model_choice$K_true[1]))
df_model_choice%>%
filter(est_model =='SST')%>%
which.min(looic)
df_model_choice%>%
filter(est_model =='SST')%>%
filter(looic = min(looic))
df_model_choice%>%
filter(est_model =='SST')%>%
filter(looic == min(looic))
uploaded_results$recovery_level
matching_files$name
source("~/.active-rstudio-document", echo=TRUE)
