version
#new functions
library(loo)
library(dbscan)
library(randnet)
library(fossil)
library(dplyr)
library(ggplot2)
library(truncnorm)
source("/Users/lapo_santi/Desktop/Nial/POMM_pairwise/POMMs/POMM_flex/functions_container_flex.R")
source("/Users/lapo_santi/Desktop/Nial/project/simplified model/Functions_priorSST.R")
source("/Users/lapo_santi/Desktop/Nial/project/simplified model/SaraWade.R")
mean_check_summary= data.frame(level_set =0,means = 0, alpha=0)
S_list = c(0.01,0.5,3)
alpha_list = c(1, 1, 1)
n_samples=10000
S = .001
beta_max = .8
alpha=3
diag0.5=T
true_alpha<-alpha
K=5
#creating a sample of P matrices
p_container = array(0, dim=c(K,K,n_samples))
for(i in 1:n_samples){
trunc = improper_prior5(K,alpha = alpha,diag0.5 = diag0.5, beta_max = beta_max )
p_container[,,i] = simulating_overlapping_POMM_powerlaw_norm(K, alpha=alpha, S  = S, beta_max = beta_max,truncations = trunc,diag0.5 = diag0.5)
}
level_list_p_container<- generalized_levels(p_container,K,n_samples, diag0.5 = diag0.5)
mean_check= data.frame(level_set = 0:(K-1),means = c(0.5,as.numeric(lapply(level_list_p_container,FUN = mean))),alpha=rep(alpha,K))
mean_check_summary= rbind(mean_check_summary, mean_check)
mean_check_summary=mean_check_summary[-1,]
ggplot(mean_check_summary, aes(factor(level_set),y= means)) +
geom_point(aes(color = factor(alpha)), size = 3) +  # Add points
geom_line(aes(color=factor(alpha),group=alpha), size = 1) +
ylim(0.5, beta_max) +
labs(title = "Evolution of level sets means for different alpha values",
x = "Level Sets",
y = "Level Sets means",
color = 'alpha') +
theme_minimal()
#goood plot here
ggplot() +
# Add a layer for each level
lapply(seq_along(level_list_p_container), function(i) {
geom_density(data = data.frame(x = level_list_p_container[[i]]), aes(x = x, y = ..density.., fill = paste0("Level ", i)), alpha = .5)
}) +
# Set the x-axis limits
scale_fill_manual(values=blue_purple)+
# Set the legend title
labs(fill = "Levels", x = "Points", y = "Density", title = paste("Density Plot of the ", K, " Level sets over ", n_samples, " P samples", sep=""),
subtitle = paste("Hyperarameters: alpha=",alpha,", Sigma=",S, sep = ""))+
theme_bw()
#goood plot here
ggplot() +
# Add a layer for each level
lapply(seq_along(level_list_p_container), function(i) {
geom_density(data = data.frame(x = level_list_p_container[[i]]), aes(x = x, y = ..density.., fill = paste0("Level ", i)), alpha = .5)
}) +
# Set the x-axis limits
# Set the legend title
labs(fill = "Levels", x = "Points", y = "Density", title = paste("Density Plot of the ", K, " Level sets over ", n_samples, " P samples", sep=""),
subtitle = paste("Hyperarameters: alpha=",alpha,", Sigma=",S, sep = ""))+
theme_bw()
S_list = c(0.01,0.5,3)
alpha_list = c(1, 1, 1)
n_samples=10000
S = .01
beta_max = .8
alpha=3
diag0.5=T
true_alpha<-alpha
K=5
#creating a sample of P matrices
p_container = array(0, dim=c(K,K,n_samples))
for(i in 1:n_samples){
trunc = improper_prior5(K,alpha = alpha,diag0.5 = diag0.5, beta_max = beta_max )
p_container[,,i] = simulating_overlapping_POMM_powerlaw_norm(K, alpha=alpha, S  = S, beta_max = beta_max,truncations = trunc,diag0.5 = diag0.5)
}
level_list_p_container<- generalized_levels(p_container,K,n_samples, diag0.5 = diag0.5)
mean_check= data.frame(level_set = 0:(K-1),means = c(0.5,as.numeric(lapply(level_list_p_container,FUN = mean))),alpha=rep(alpha,K))
mean_check_summary= rbind(mean_check_summary, mean_check)
mean_check_summary=mean_check_summary[-1,]
ggplot(mean_check_summary, aes(factor(level_set),y= means)) +
geom_point(aes(color = factor(alpha)), size = 3) +  # Add points
geom_line(aes(color=factor(alpha),group=alpha), size = 1) +
ylim(0.5, beta_max) +
labs(title = "Evolution of level sets means for different alpha values",
x = "Level Sets",
y = "Level Sets means",
color = 'alpha') +
theme_minimal()
#goood plot here
ggplot() +
# Add a layer for each level
lapply(seq_along(level_list_p_container), function(i) {
geom_density(data = data.frame(x = level_list_p_container[[i]]), aes(x = x, y = ..density.., fill = paste0("Level ", i)), alpha = .5)
}) +
# Set the x-axis limits
# Set the legend title
labs(fill = "Levels", x = "Points", y = "Density", title = paste("Density Plot of the ", K, " Level sets over ", n_samples, " P samples", sep=""),
subtitle = paste("Hyperarameters: alpha=",alpha,", Sigma=",S, sep = ""))+
theme_bw()
